- name: Install PXE Components
  hosts: localhost
  become: true
  tasks:

    - name: Install TFTP and DHCP
      ansible.builtin.dnf:
        name: tftp-server,dhcp-server
        state: latest

    - name: Install Boot Files
      ansible.builtin.dnf:
        name: syslinux,shim-x64,grub2-efi-x64
        installroot: /opt/syslinux
        state: present

    - name: Set Up BIOS Boot Dir
      ansible.builtin.file:
        path: "/var/lib/tftpboot/pxelinux.cfg"
        state: directory

    - name: Copy BIOS Boot Files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /var/lib/tftpboot/pxelinux.cfg
      with_items:
        - /opt/syslinux/usr/share/syslinux/pxelinux.0
        - /opt/syslinux/usr/share/syslinux/menu.c32
        - /opt/syslinux/usr/share/syslinux/vesamenu.c32
        - /opt/syslinux/usr/share/syslinux/ldlinux.c32
        - /opt/syslinux/usr/share/syslinux/libcom32.c32
        - /opt/syslinux/usr/share/syslinux/libutil.c32

    - name: Set Up UEFI Boot Dir
      ansible.builtin.file:
        path: "/var/lib/tftpboot/uefi"
        state: directory
       
    - name: Copy UEFI Boot Files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /var/lib/tftpboot/uefi
      with_items:
        - /opt/syslinux/boot/efi/EFI/fedora/shimx64.efi
        - /opt/syslinux/boot/efi/EFI/fedora/grubx64.efi

    - name: Set Up Kernel Dir
      ansible.builtin.file:
        path: /var/lib/tftpboot/f36
        state: directory

    - name: Get Kernel and Initrd
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /var/lib/tftpboot/f36
      with_items:
      - https://https://download.fedoraproject.org/pub/fedora/linux/releases/36/Server/x86_64/os/images/pxeboot/vmlinuz
      - https://download.fedoraproject.org/pub/fedora/linux/releases/36/Server/x86_64/os/images/pxeboot/initrd.img

    - name: Write DHCP Config
      ansible.builtin.copy:
        dest: /etc/dhcp/dhcpd.conf
        backup: yes
        content: |
          option arch code 93 = unsigned integer 16;
          
           subnet 192.168.1.0 netmask 255.255.255.0 {
            if option arch = 00:07 {
              # x64 UEFI
              filename "uefi/shimx64.efi";
              next-server 192.168.1.2;
            } else {
              # BIOS
              filename "pxelinux.cfg/pxelinux.0";
              next-server 192.168.1.2;
            }
            authoritative;
            default-lease-time 600;
            max-lease-time 7200;
            ddns-update-style none;
            
            option domain-name-servers 192.168.1.1;
            option routers 192.168.1.1;
          
          }

    - name: Write BIOS Boot Menu
      ansible.builtin.copy:
        dest: /var/lib/tftpboot/pxelinux.cfg/default
        content: |
          default vesamenu.c32
          prompt 1
          timeout 600

          label local
          menu label Boot from ^local drive
          menu default
          localboot 0xffff
        
          label linux
          menu label ^Install Fedora 36 64-bit
          kernel f36/vmlinuz
          append initrd=f36/initrd.img inst.stage2=https://download.fedoraproject.org/pub/fedora/linux/releases/36/Server/x86_64/os/ ip=dhcp
        
          label server
          menu label ^Install Fedora 36 ( Minimal Image )
          kernel f36/vmlinuz
          append initrd=f36/initrd.img inst.stage2=https://download.fedoraproject.org/pub/fedora/linux/releases/36/Server/x86_64/os/ ip=dhcp ks=https://example.com/fedora/kickstarts/minimal.ks

    - name: Write UEFI Boot Menu
      ansible.builtin.copy:
        dest: /var/lib/tftpboot/pxelinux.cfg/default
        content: |
          function load_video {
            insmod efi_gop
            insmod efi_uga
            insmod video_bochs
            insmod video_cirrus
            insmod all_video
          }
          
          load_video
          set gfxpayload=keep
          insmod gzio
        
          menuentry 'Exit this grub' {
            exit
          }
        
          menuentry 'Install Fedora 64-bit'  --class fedora --class gnu-linux --class gnu --class os {
            linux $fw_path/f36/vmlinuz ip=dhcp inst.repo=https://download.fedoraproject.org/pub/fedora/linux/releases/36/Server/x86_64/os/
            initrd $fw_path/f36/initrd.img
          }
        
          menuentry 'Install Fedora 36 Server'  --class fedora --class gnu-linux --class gnu --class os {
            kernel f36/vmlinuz
            append initrd=f36/initrd.img inst.repo=https://download.fedoraproject.org/pub/fedora/linux/releases/36/Server/x86_64/os/ ip=dhcp ks=https://git.fedorahosted.org/cgit/spin-kickstarts.git/plain/fedora-install-server.ks?h=f21
          }

    - name: Open DHCP and TFTP in Firewall
      ansible.builtin.firewalld:
        service: dhcp,tftp
        state: enabled
        permanent: yes

    - name: Enable and Start Services
      ansible.builtin.systemd:
        name: tftp.socket,dhcpd
        state: reloaded
        enabled: yes
  
  