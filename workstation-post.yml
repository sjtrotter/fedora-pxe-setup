- name: Post Install for Basic Workstation
  hosts: localhost
  become: true
  tasks:

    - name: Update All (except kernel)
      ansible.builtin.dnf:
        name: "*"
        state: latest
        exclude: kernel-core,kernel-modules

    - name: Install Desktop Tweaks
      ansible.builtin.dnf:
        name:
          - gnome-extensions-app
          - gnome-tweaks
          - gnome-shell-extension-frippery-applications-menu
          - gnome-shell-extension-apps-menu
          - gnome-shell-extension-caffeine
          - gnome-shell-extension-no-overview
          - gnome-shell-extension-window-list
        state: latest
    
    - name: Install CERT Repo Keys
      ansible.builtin.command:
        cmd: "{{ item }}"
      with_items:
        - rpm --import https://forensics.cert.org/forensics.asc
        - rpm --import https://www.cert.org/forensics/repository/forensics-expires-2022-04-03.asc

    - name: Install Other Repo RPMs
      ansible.builtin.dnf:
        name:
          - https://forensics.cert.org/cert-forensics-tools-release-36.rpm
          - fedora-workstation-repositories
        state: installed

    - name: Write vscode Repo
      ansible.builtin.copy:
        dest: /etc/yum.repos.d/vscode.repo
        content: |
          [code]
          name=Visual Studio Code
          baseurl=https://packages.microsoft.com/yumrepos/vscode
          enabled=1
          gpgcheck=1
          gpgkey=https://packages.microsoft.com/keys/microsoft.asc

    - name: Get NetworkMiner Zip
      ansible.builtin.get_url:
        url: https://www.netresec.com/?download=NetworkMiner
        dest: /tmp/nm.zip
    
    - name: Extract NetworkMiner
      ansible.builtin.unarchive:
        src: /tmp/nm.zip
        dest: /opt

    - name: chmod NetworkMiner Files
      ansible.builtin.shell:
        cmd: "{{ item }}"
      with_items: 
        - chmod +x /opt/NetworkMiner*/NetworkMiner.exe
        - chmod -R go+w /opt/NetworkMiner*/AssembledFiles
        - chmod -R go+w /opt/NetworkMiner*/Captures
        - mv networkminer.png /opt/NetworkMiner*

    - name: Get NM exe Location
      ansible.builtin.find:
        patterns: "*NetworkMiner.exe"
        paths: "/opt"
        recurse: yes
      register: nmexelocation

    - name: Get NM icon Location
      ansible.builtin.find:
        patterns: "*networkminer.png"
        paths: "/opt"
        recurse: yes
      register: nmiconlocation

    - name: Write NetworkMiner Desktop File
      ansible.builtin.copy:
        dest: /usr/share/applications/NetworkMiner.desktop
        content: |
          [Desktop Entry]
          Type=Application
          Name=Network Miner
          Exec=mono {{ nmexelocation.files[0].path }} --noupdatecheck
          Icon={{ nmiconlocation.files[0].path }}

    - name: Install Tools Packages
      ansible.builtin.dnf:
        name:
          - mono-devel
          - net-tools
          - nmap
          - putty
          - screen
          - suricata
          - tcpdump
          - tcpreplay
          - wireshark
          - yara
          - yubioath-desktop
          - google-chrome-stable
          - code
          - brim
          - zeek
          - autopsy
          - Volatility
          - avml
        state: latest
        enablerepo: google-chrome

    - name: Write User Profile for Extensions
      ansible.builtin.copy:
        dest: /etc/dconf/db/local.d/00-extensions
        content: |
          [org/gnome/shell]
          # List all extensions that you want to have enabled for all users
          enabled-extensions=['apps-menu@gnome-shell-extensions.gcampax.github.com','caffeine@patapon.info','no-overview@fthx','places-menu@gnome-shell-extensions.gcampax.github.com','window-list@gnome-shell-extensions.gcampax.github.com']

    - name: Write User Favorite Apps
      ansible.builtin.copy:
        dest: /etc/dconf/db/local.d/00-favorite-apps
        content: |
          [org/gnome/shell]
          favorite-apps = ['firefox.desktop','google-chrome.desktop','autopsy.desktop','code.desktop','gnome-text-editor.desktop','putty.desktop','gnome-connections.desktop','NetworkMiner.desktop','brim.desktop','gnome-terminal.desktop','nautilus.desktop']

    - name: Set User Wallpaper
      ansible.builtin.copy:
        dest: /etc/dconf/db/local.d/00-background
        content: |
          [org/gnome/desktop/background]
          picture-uri='file:///usr/share/backgrounds/Low-Poly-Raven.png'
          picture-options='stretched'
          primary-color='000000'
          secondary-color='FFFFFF'

    - name: Add Window Buttons (maximize, minimize)
      ansible.builtin.copy:
        dest: /etc/dconf/db/local.d/00-windowbuttons
        content: |
          [org/gnome/desktop/wm/preferences]
          button-layout='appmenu:minimize,maximize,close'

    - name: Set Dark Mode
      ansible.builtin.copy:
        dest: /etc/dconf/db/local.d/00-darkmode
        content: |
          [org/gnome/desktop/interface]
          color-scheme='prefer-dark'

    - name: Template Wallpaper XML
      ansible.builtin.copy:
        dest: "{{ item.dest }}"
        content: |
          <?xml version="1.0"?>
          <!DOCTYPE wallpapers SYSTEM "gnome-wp-list.dtd">
          <wallpapers>
            <wallpaper deleted='false'>
              <name>{{ item.name.split(".")[0].split('-') | title }}</name>
              <filename>/usr/share/backgrounds/{{ item.name }}</filename>
              <filename-dark>/usr/share/backgrounds/{{ item.name }}</filename-dark>
              <options>zoom</options>
              <shade_type>solid</shade_type>
              <pcolor>#000000</pcolor>
              <scolor>#FFFFFF</scolor>
            </wallpaper>
          </wallpapers>
      with_items:
        - { name: low-poly-raven.png, dest: /usr/share/gnome-background-properties/low-poly-raven.xml }
        - { name: 3-eyed-raven.png, dest: /usr/share/gnome-background-properties/3-eyed-raven.xml }
        - { name: flight-on-raven.png, dest: /usr/share/gnome-background-properties/flight-on-raven.xml }
        - { name: whispy-raven.png, dest: /usr/share/gnome-background-properties/whispy-raven.xml }

    - name: Update dconf
      ansible.builtin.shell:
        cmd: dconf update

    